import Alpha_Ai

from collections import deque
from keras.models import load_model

input_file_path = r"D:\Data\ActivityNet\\runaway.mp4"
output_file_path = r"D:\Alpha_Ai"

first = load_model(moddel)
lb = pickle.loads(open("label","rb").read())

mean = np.array([100.5,102.4,1.2.7][::1], dtype="float32")
Q = deque(maxlen=100)



code = cv2.VideoCapture(input_file_path)

(p,s) = (None,None)

while True:
    (a,b) = vs.read()

    if not a:
        break

    if p is None or s is None:
        (s,p) = b.shape[:2]

    output = b.copy()
    b = cv2.cvtColor(b,cv2.COLOR_BGR2RGB)
    b = cv2.resize(b,(224,224).astype("float32"))
    b -= mean

    preds = first.predict(np.expand_dims(frame,axis=0))[0]
    Q.append(preds)

    final = np.array(Q).mean(axis=0)
    i = np.argmax(final)
    label = lb.classes_[i]

    text = "activity : {}".format(label)
    cv2.putText(output,text,(35,50),cv2.FONT_HERSHEY_SIMPLEX,
                1.25,(0,255,0),5)

    cv2.imshow(output)
    key = cv2.waitKey(1) & 0xFF

    if key == ord("q"):
        break;

vs.release()
